product-name: pivotal-container-service
network-properties:
  singleton_availability_zone:
    name: ((availability_zone_1))
  other_availability_zones:
  - name: ((availability_zone_1))
  network:
    name: infrastructure
  service_network:
    name: services-subnet
product-properties:
# .properties.oidc_selector:
#   selected_option: disabled
#   value: disabled
 .properties.oidc_selector:
   selected_option: enabled
   value: enabled
 .properties.oidc_selector.enabled.groups_claim:
   value: roles
 .properties.oidc_selector.enabled.groups_prefix:
   value: 'oidc:'
 .properties.oidc_selector.enabled.username_claim:
   value: user_name
 .properties.oidc_selector.enabled.username_prefix:
   value: 'oidc:'
# PKS API Service
 .pivotal-container-service.pks_tls:
   value:
     cert_pem: ((container_service_pks_tls_cert_pem))
     private_key_pem: ((container_service_pks_tls_private_key_pem))
 .properties.pks_api_hostname:
   value: ((pks_api_hostname))
 .properties.worker_max_in_flight:
   value: 1
# Configuration for Plan 1
 .properties.plan1_selector:
   selected_option: active
   value: Plan Active
 .properties.plan1_selector.active.name:
   value: small
 .properties.plan1_selector.active.description:
   value: 'PKS Cluster with 3 Masters / 3 Workers'
 .properties.plan1_selector.active.master_instances:
   value: 3
 .properties.plan1_selector.active.master_az_placement:
   value:
   - ((availability_zone_1))
 .properties.plan1_selector.active.max_worker_instances:
   value: 50
 .properties.plan1_selector.active.worker_az_placement:
   value:
   - ((availability_zone_1))
 .properties.plan1_selector.active.worker_instances:
   value: 3
 .properties.plan1_selector.active.allow_privileged_containers:
   value: true
 .properties.plan1_selector.active.admission_plugins:
   value:
#   - pod_security_policy
#   - deny_escalating_exec
#   - security_context_deny
# Configuration for Plan 2
 .properties.plan2_selector:
   selected_option: inactive
   value: Plan Inactive
# Configuration for Plan 3
 .properties.plan3_selector:
   selected_option: inactive
   value: Plan Inactive
# Configuration for Plan 4
 .properties.plan4_selector:
   selected_option: inactive
   value: Plan Inactive
# Configuration for Plan 5
 .properties.plan5_selector:
   selected_option: inactive
   value: Plan Inactive
# Configuration for Plan 6
 .properties.plan6_selector:
   selected_option: inactive
   value: Plan Inactive
# Configuration for Plan 7
 .properties.plan7_selector:
   selected_option: inactive
   value: Plan Inactive
# Configuration for Plan 8
 .properties.plan8_selector:
   selected_option: inactive
   value: Plan Inactive
# Configuration for Plan 9
 .properties.plan9_selector:
   selected_option: inactive
   value: Plan Inactive
# Configuration for Plan 10
 .properties.plan10_selector:
   selected_option: inactive
   value: Plan Inactive

# Kubernetes Cloud Provider
 .properties.cloud_provider:
   selected_option: aws
   value: AWS
 .properties.cloud_provider.aws.iam_instance_profile_master:
   value: ((pks_master_iam_instance_profile_name))
 .properties.cloud_provider.aws.iam_instance_profile_worker:
   value: ((pks_worker_iam_instance_profile_name))

# UAA Configuration
 .properties.uaa:
   selected_option: internal
   value: internal
 .properties.uaa_pks_cli_access_token_lifetime:
   value: 600
 .properties.uaa_pks_cli_refresh_token_lifetime:
   value: 21600

# Monitoring
 .properties.wavefront:
   selected_option: disabled
   value: disabled

# Usage Data
 .properties.telemetry_installation_purpose_selector:
   selected_option: demo_or_poc
   value: demo_or_poc
 .properties.telemetry_selector:
   selected_option: enabled
   value: enabled
 .properties.telemetry_selector.enabled.billing_polling_interval:
   value: 60
 .properties.telemetry_selector.enabled.environment_provider:
   value: none
 .properties.telemetry_selector.enabled.telemetry_polling_interval:
   value: 600
 .properties.telemetry_selector.enabled.telemetry_url:
   value: https://vcsa.vmware.com/ph

# Errands
errand-config:
  delete-all-clusters:
    pre-delete-state: true
  pks-nsx-t-precheck:
    post-deploy-state: false
  smoke-tests:
    post-deploy-state: false
  upgrade-all-service-instances:
    post-deploy-state: true
  wavefront-alert-creation:
    post-deploy-state: false
  wavefront-alert-deletion:
    pre-delete-state: false

# Ressources
resource-config:
  pivotal-container-service:
    instances: automatic
    persistent_disk:
      size_mb: automatic
    instance_type:
      id: automatic
    internet_connected: true
    elb_names:
    - ((pks_api_lb))

